import os
import sys
import questionary

# Dynamically add PurppleFramework to sys.path
script_dir = os.path.dirname(os.path.abspath(__file__))
purppleframework_dir = os.path.abspath(os.path.join(script_dir, "..", "..", ".."))
sys.path.insert(0, purppleframework_dir)

from modules.Red.ExploitSearch.cmsexploit import detect_cms
from modules.Red.ExploitSearch.exsearch import find_exploits

def run_selected_exploits(target):
    """
    Allows the user to select which exploit modules to run using questionary.
    """
    print(f"\n[+] Running Exploit Detection on {target}")
    
    selected_exploits = questionary.checkbox(
        "Select the exploit detection modules to perform:",
        choices=[
            "CMS Exploit Detection",
            "Nmap-Based Exploit Search"
        ]
    ).ask()
    
    if not selected_exploits:
        print("[!] No exploit modules selected. Exiting.")
        return
    
    # 1️⃣ CMS Exploit Detection
    if "CMS Exploit Detection" in selected_exploits:
        print("\n[*] --- CMS Exploit Detection ---")
        detect_cms(target)
    
    # 2️⃣ Nmap-Based Exploit Search
    if "Nmap-Based Exploit Search" in selected_exploits:
        print("\n[*] --- Nmap-Based Exploit Search ---")
        find_exploits(target)
    
    print("\n[*] Exploit Detection Completed!\n")

if __name__ == "__main__":
    target = questionary.text("Enter the target URL or IP:").ask()
    run_selected_exploits(target)
